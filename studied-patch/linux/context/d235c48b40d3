commit d235c48b40d399328585a68f3f9bf7cc3062d586
Author: Maxime Chevallier <maxime.chevallier@bootlin.com>
Date:   Thu Feb 28 22:14:33 2019 +0100

    net: dsa: mv88e6xxx: power serdes on/off for 10G interfaces on 6390X
    
    Upon setting the cmode on 6390 and 6390X, the associated serdes
    interfaces must be powered off/on.
    
    Both 6390X and 6390 share code to do so, but it currently uses the 6390
    specific helper mv88e6390_serdes_power() to disable and enable the
    serdes interface.
    
    This call will fail silently on 6390X when trying so set a 10G interface
    such as XAUI or RXAUI, since mv88e6390_serdes_power() internally grabs
    the lane number based on modes supported by the 6390, and returns 0 when
    getting -ENODEV as a lane number.
    
    Using mv88e6390x_serdes_power() should be safe here, since we explicitly
    rule-out all ports but the 9 and 10, and because modes supported by 6390
    ports 9 and 10 are a subset of those supported on 6390X.
    
    This was tested on 6390X using RXAUI mode.
    
    Fixes: 364e9d7776a3 ("net: dsa: mv88e6xxx: Power on/off SERDES on cmode change")
    Signed-off-by: Maxime Chevallier <maxime.chevallier@bootlin.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/dsa/mv88e6xxx/port.c b/drivers/net/dsa/mv88e6xxx/port.c
index ebd26b6a93e6..4b02c96f6786 100644
--- a/drivers/net/dsa/mv88e6xxx/port.c
+++ b/drivers/net/dsa/mv88e6xxx/port.c
@@ -408,7 +408,7 @@ int mv88e6390x_port_set_cmode(struct mv88e6xxx_chip *chip, int port,
 			return err;
 	}
 
-	err = mv88e6390_serdes_power(chip, port, false);
+	err = mv88e6390x_serdes_power(chip, port, false);
 	if (err)
 		return err;
 
@@ -424,7 +424,7 @@ int mv88e6390x_port_set_cmode(struct mv88e6xxx_chip *chip, int port,
 		if (err)
 			return err;
 
-		err = mv88e6390_serdes_power(chip, port, true);
+		err = mv88e6390x_serdes_power(chip, port, true);
 		if (err)
 			return err;
 
