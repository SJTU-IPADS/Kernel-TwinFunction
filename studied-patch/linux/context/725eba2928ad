commit 725eba2928ada8d0fe6bafb984e37576851edc91
Author: Peng Hao <peng.hao2@zte.com.cn>
Date:   Tue Nov 6 22:57:14 2018 +0800

    misc/pvpanic: add MMIO support
    
    On some architectures (e.g. arm64), it's preferable to use MMIO, since
    this can be used standalone. Add MMIO support to the pvpanic driver.
    
    Suggested-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    [Use acpi_dev_resource_memory API. - Andy]
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Peng Hao <peng.hao2@zte.com.cn>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/misc/pvpanic.c b/drivers/misc/pvpanic.c
index 49c59e1d299d..a46701c22b35 100644
--- a/drivers/misc/pvpanic.c
+++ b/drivers/misc/pvpanic.c
@@ -26,6 +26,8 @@
 #include <linux/types.h>
 #include <linux/acpi.h>
 
+static void __iomem *base;
+
 MODULE_AUTHOR("Hu Tao <hutao@cn.fujitsu.com>");
 MODULE_DESCRIPTION("pvpanic device driver");
 MODULE_LICENSE("GPL");
@@ -41,8 +43,6 @@ MODULE_DEVICE_TABLE(acpi, pvpanic_device_ids);
 
 #define PVPANIC_PANICKED	(1 << 0)
 
-static u16 port;
-
 static struct acpi_driver pvpanic_driver = {
 	.name =		"pvpanic",
 	.class =	"QEMU",
@@ -57,7 +57,7 @@ static struct acpi_driver pvpanic_driver = {
 static void
 pvpanic_send_event(unsigned int event)
 {
-	outb(event, port);
+	iowrite8(event, base);
 }
 
 static int
@@ -80,7 +80,10 @@ pvpanic_walk_resources(struct acpi_resource *res, void *context)
 	struct resource r;
 
 	if (acpi_dev_resource_io(res, &r)) {
-		port = r.start;
+		base = ioport_map(r.start, resource_size(&r));
+		return AE_OK;
+	} else if (acpi_dev_resource_memory(res, &r)) {
+		base = ioremap(r.start, resource_size(&r));
 		return AE_OK;
 	}
 
@@ -101,7 +104,7 @@ static int pvpanic_add(struct acpi_device *device)
 	acpi_walk_resources(device->handle, METHOD_NAME__CRS,
 			    pvpanic_walk_resources, NULL);
 
-	if (!port)
+	if (!base)
 		return -ENODEV;
 
 	atomic_notifier_chain_register(&panic_notifier_list,
@@ -115,6 +118,8 @@ static int pvpanic_remove(struct acpi_device *device)
 
 	atomic_notifier_chain_unregister(&panic_notifier_list,
 					 &pvpanic_panic_nb);
+	iounmap(base);
+
 	return 0;
 }
 
