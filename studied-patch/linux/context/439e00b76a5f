commit 439e00b76a5fb1662e3ae49fc48bd3f950575b9d
Author: Yury Norov <ynorov@caviumnetworks.com>
Date:   Thu Jan 3 15:26:48 2019 -0800

    lib/find_bit_benchmark.c: align test_find_next_and_bit with others
    
    Contrary to other tests, test_find_next_and_bit() test uses tab
    formatting in output and get_cycles() instead of ktime_get().
    get_cycles() is not supported by some arches, so ktime_get() fits better
    in generic code.
    
    Fix it and minor style issues, so the output looks like this:
    
    Start testing find_bit() with random-filled bitmap
    find_next_bit:                 7142816 ns, 163282 iterations
    find_next_zero_bit:            8545712 ns, 164399 iterations
    find_last_bit:                 6332032 ns, 163282 iterations
    find_first_bit:               20509424 ns,  16606 iterations
    find_next_and_bit:             4060016 ns,  73424 iterations
    
    Start testing find_bit() with sparse bitmap
    find_next_bit:                   55984 ns,    656 iterations
    find_next_zero_bit:           19197536 ns, 327025 iterations
    find_last_bit:                   65088 ns,    656 iterations
    find_first_bit:                5923712 ns,    656 iterations
    find_next_and_bit:               29088 ns,      1 iterations
    
    Link: http://lkml.kernel.org/r/20181123174803.10916-1-ynorov@caviumnetworks.com
    Signed-off-by: Yury Norov <ynorov@caviumnetworks.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: "Norov, Yuri" <Yuri.Norov@cavium.com>
    Cc: Clement Courbet <courbet@google.com>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: Matthew Wilcox <mawilcox@microsoft.com>
    Cc: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/lib/find_bit_benchmark.c b/lib/find_bit_benchmark.c
index 5367ffa5c18f..f0e394dd2beb 100644
--- a/lib/find_bit_benchmark.c
+++ b/lib/find_bit_benchmark.c
@@ -108,14 +108,13 @@ static int __init test_find_next_and_bit(const void *bitmap,
 		const void *bitmap2, unsigned long len)
 {
 	unsigned long i, cnt;
-	cycles_t cycles;
+	ktime_t time;
 
-	cycles = get_cycles();
+	time = ktime_get();
 	for (cnt = i = 0; i < BITMAP_LEN; cnt++)
-		i = find_next_and_bit(bitmap, bitmap2, BITMAP_LEN, i+1);
-	cycles = get_cycles() - cycles;
-	pr_err("find_next_and_bit:\t\t%llu cycles, %ld iterations\n",
-		(u64)cycles, cnt);
+		i = find_next_and_bit(bitmap, bitmap2, BITMAP_LEN, i + 1);
+	time = ktime_get() - time;
+	pr_err("find_next_and_bit:  %18llu ns, %6ld iterations\n", time, cnt);
 
 	return 0;
 }
