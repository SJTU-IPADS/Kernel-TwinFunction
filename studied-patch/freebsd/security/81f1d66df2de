commit 81f1d66df2de7298ccce84f89e9153c429d06952
Author: emaste <emaste@FreeBSD.org>
Date:   Thu Apr 5 12:56:40 2018 +0000

    MFC r332045: Fix kernel memory disclosure in tcp_ctloutput
    
    strcpy was used to copy a string into a buffer copied to userland, which
    left uninitialized data after the terminating 0-byte.  Use the same
    approach as in tcp_subr.c: strncpy and explicit '\0'.
    
    admbugs:        765, 822
    Reported by:    Ilja Van Sprundel <ivansprundel@ioactive.com>
    Reported by:    Vlad Tsyrklevich
    Security:       Kernel memory disclosure
    Sponsored by:   The FreeBSD Foundation

diff --git a/sys/netinet/tcp_usrreq.c b/sys/netinet/tcp_usrreq.c
index c1e4820acf1..e3b165c81e8 100644
--- a/sys/netinet/tcp_usrreq.c
+++ b/sys/netinet/tcp_usrreq.c
@@ -1495,7 +1495,9 @@ tcp_ctloutput(struct socket *so, struct sockopt *sopt)
 		return (error);
 	} else if ((sopt->sopt_dir == SOPT_GET) && 
 	    (sopt->sopt_name == TCP_FUNCTION_BLK)) {
-		strcpy(fsn.function_set_name, tp->t_fb->tfb_tcp_block_name);
+		strncpy(fsn.function_set_name, tp->t_fb->tfb_tcp_block_name,
+		    TCP_FUNCTION_NAME_LEN_MAX);
+		fsn.function_set_name[TCP_FUNCTION_NAME_LEN_MAX - 1] = '\0';
 		fsn.pcbcnt = tp->t_fb->tfb_refcnt;
 		INP_WUNLOCK(inp);
 		error = sooptcopyout(sopt, &fsn, sizeof fsn);
