commit b5c25b45873c04f245922b4a0afe90d05483b7f2
Author: kevans <kevans@FreeBSD.org>
Date:   Wed Mar 14 03:47:58 2018 +0000

    MFC r327391: Avoid use of the fdt_get_property_*() API
    
    [It is] intrinsically incompatible with FDT versions < 16. This also
    simplifies the code a bit.

diff --git a/sys/dev/ofw/ofw_fdt.c b/sys/dev/ofw/ofw_fdt.c
index 9fe56e0f195..4633761710e 100644
--- a/sys/dev/ofw/ofw_fdt.c
+++ b/sys/dev/ofw/ofw_fdt.c
@@ -227,7 +227,7 @@ ofw_fdt_instance_to_package(ofw_t ofw, ihandle_t instance)
 static ssize_t
 ofw_fdt_getproplen(ofw_t ofw, phandle_t package, const char *propname)
 {
-	const struct fdt_property *prop;
+	const void *prop;
 	int offset, len;
 
 	offset = fdt_phandle_offset(package);
@@ -235,7 +235,7 @@ ofw_fdt_getproplen(ofw_t ofw, phandle_t package, const char *propname)
 		return (-1);
 
 	len = -1;
-	prop = fdt_get_property(fdtp, offset, propname, &len);
+	prop = fdt_getprop(fdtp, offset, propname, &len);
 
 	if (prop == NULL && strcmp(propname, "name") == 0) {
 		/* Emulate the 'name' property */
@@ -312,7 +312,7 @@ static int
 ofw_fdt_nextprop(ofw_t ofw, phandle_t package, const char *previous, char *buf,
     size_t size)
 {
-	const struct fdt_property *prop;
+	const void *prop;
 	const char *name;
 	int offset;
 
@@ -327,7 +327,7 @@ ofw_fdt_nextprop(ofw_t ofw, phandle_t package, const char *previous, char *buf,
 
 	if (previous != NULL) {
 		while (offset >= 0) {
-			prop = fdt_get_property_by_offset(fdtp, offset, NULL);
+			prop = fdt_getprop_by_offset(fdtp, offset, &name, NULL);
 			if (prop == NULL)
 				return (-1); /* Internal error */
 
@@ -336,17 +336,16 @@ ofw_fdt_nextprop(ofw_t ofw, phandle_t package, const char *previous, char *buf,
 				return (0); /* No more properties */
 
 			/* Check if the last one was the one we wanted */
-			name = fdt_string(fdtp, fdt32_to_cpu(prop->nameoff));
 			if (strcmp(name, previous) == 0)
 				break;
 		}
 	}
 
-	prop = fdt_get_property_by_offset(fdtp, offset, &offset);
+	prop = fdt_getprop_by_offset(fdtp, offset, &name, &offset);
 	if (prop == NULL)
 		return (-1); /* Internal error */
 
-	strncpy(buf, fdt_string(fdtp, fdt32_to_cpu(prop->nameoff)), size);
+	strncpy(buf, name, size);
 
 	return (1);
 }
